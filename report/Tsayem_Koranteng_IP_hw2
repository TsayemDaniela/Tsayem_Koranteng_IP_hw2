This project contains 1 python file for function definitions which include 
the Watershed algorithm and Image storage and loading functions.

The implementation of the watershed algorithm follows from Pseudocode in P.Soille

For input we are given f1.txt and f2.txt

The output after segmentation with the watershed algorithm of f1 and f2 using a 4- and 8- 
Neighbourhood checks are given in output directory.

The 2 ouputs of f2 differ in segmentation due to the neighbourhood being considered. f2 is
an image of a cirle; a large number of pixels are connected on the diagonals. Hence using 
the 4 horizontally and vertically connected pixels means the diagonal neighbours are not 
considered and so are segmented seperately, causing more segments. If the diagonals are
considered, they are segmented together and less segments are obtained.

We have selected 3 input images for segmentation: 
  f3 -> Coins on table
  f4 -> Camera
  f5 -> Microscopy Image of Cells

Preprocessing (before watershed algorithm is applied) steps are achieved through use of 
predefined functions from the cv2 library.
The prepocesssing steps / cv2 operations for these images are outlined: 
  f3:
    1.  
    2. 
    
  f4:
    1.
    2.
    
   f5:
    1.
    2.
    
All segmentations for selfchosen images use the 8- Neighbourhood comparison

Contributions:
  Report - Koranteng
  Repo Set-up - Tsayem
  Chosen Files - Korateng & Tsayem
  Watershed - Koranteng
  Neighbourhood - Tsayem
  Main & Make File - Koranteng & Tsayem

Sources:
  P.Soille Textbook
  f3:
  f4:
  f5: Paul Held. “Sample Preparation for Fluoresence Microscopy: An Introduction”. In: (July 2015).
  Python Documentation (CV2)
  
